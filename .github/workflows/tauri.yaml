name: Publish Tauri App
on:
  push:
    tags:
      - "tauri-*"

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, ubuntu-20.04, windows-latest ]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install dependencies (macos only)
        if: matrix.platform == 'macos-latest'
        run: |
          rustup target add aarch64-apple-darwin

      - name: Install yarn
        run: |
          npm install -g yarn
          cd YYeTsFE
          yarn

      - name: Run hooks
        env:
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          REACT_APP_SENTRY_DSN: ${{ secrets.REACT_APP_SENTRY_DSN }}
          REACT_APP_DOMAIN: ${{ secrets.REACT_APP_DOMAIN }}
          REACT_APP_GA: ${{ secrets.REACT_APP_GA }}
          GENERATE_SOURCEMAP: ${{ secrets.GENERATE_SOURCEMAP }}
        run: |
          bash scripts/pre_build.sh
          echo "REACT_APP_TAURI=https://yyets.dmesg.app" >> YYeTsFE/.env
          pwd
          ls
          echo ${{ env.GITHUB_WORKSPACE }}
#          cd ${{ env.GITHUB_WORKSPACE }}

      - name: Setup macos universal binary env
        if: matrix.platform == 'macos-latest'
        run: echo "BUILD_ARGS=--target universal-apple-darwin" >> $GITHUB_ENV

      - uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseDraft: true
          prerelease: false
          projectPath: "YYeTsFE"
          args: ${{ env.BUILD_ARGS }}
